
// --- --- ---
// Note: This file was automatically generated by tauria-tsgen.
// Manually modifying it may break the interface and lead to unintended consequences. 
// Please exercise great caution if you choose to make manual changes.
//
// target file : basic.rs


import { invoke } from '@tauri-apps/api/core';
import * as T from '../../interface/';

// tauri command interface class 
// target file : basic.rs
class Basic implements T.IBasic {

    //#region #tauri command
    
    /**
* * @brief Greets the user.* * @param name The name of the user.* * @returns A greeting message.*/
    async greet(name: string): Promise<string> {
        return await invoke('greet', { name: name });
    }
    
    /**
* * @brief Adds two numbers.* * @param a The first number.* * @param b The second number.* * @returns The sum of the two numbers.*/
    async add(a: number, b: number): Promise<number> {
        return await invoke('add', { a: a, b: b });
    }
    
    /**
* * @brief Gets a user by ID.* * @param id The ID of the user.* * @returns The user with the specified ID.*/
    async getUser(id: number): Promise<string> {
        return await invoke('get_user', { id: id });
    }
    
    /**
* * @brief Updates a user.* * @param user_name The name of the user to update.* * @returns A message indicating the user has been updated.*/
    async updateUser(user_name: string): Promise<string> {
        return await invoke('update_user', { user_name: user_name });
    }
    
    //#endregion


    //#region #endregion
    private constructor() {}

    static create(): T.IBasic  {
        return new Basic();
    }
    //#endregion

}

// factory function
export function createBasic(): T.IBasic {
    return Basic.create();
}
