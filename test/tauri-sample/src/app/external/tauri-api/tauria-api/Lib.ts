// --- --- ---
// Note: This file was automatically generated by tauria-tsgen.
// Manually modifying it may break the interface and lead to unintended consequences.
// Please exercise great caution if you choose to make manual changes.
//
// target file : lib.rs

import { invoke } from '@tauri-apps/api/core';
import * as T from '../interface/';

// tauri command interface class
// target file : lib.rs
class Lib implements T.ILib {
  //#region #tauri command

  /**
   **/
  async greet_command(name: string): Promise<string> {
    return await invoke('greet_command', { name: name });
  }

  /**
   **/
  async multiplication_command(data: T.MultiplicationArg): Promise<number> {
    return await invoke('multiplication_command', { data: data });
  }

  /**
   **/
  async error_handling_command(is_error: boolean): Promise<string> {
    return await invoke('error_handling_command', { is_error: is_error });
  }

  /**
   **/
  async read_file_command(path: string): Promise<unknown> {
    return await invoke('read_file_command', { path: path });
  }

  /**
   **/
  async app_handle_command(): Promise<string> {
    return await invoke('app_handle_command', {});
  }

  /**
   **/
  async webview_window_command(): Promise<string> {
    return await invoke('webview_window_command', {});
  }

  /**
   **/
  async webview_window_with_arg_command(name: string): Promise<string> {
    return await invoke('webview_window_with_arg_command', { name: name });
  }

  /**
   **/
  async complex_state_command(number: number): Promise<T.CustomResponse> {
    return await invoke('complex_state_command', { number: number });
  }

  //#endregion

  //#region #endregion
  private constructor() {}

  static create(): T.ILib {
    return new Lib();
  }
  //#endregion
}

// factory function
export function createLib(): T.ILib {
  return Lib.create();
}
